title       "<%= @app_name %> API Requests Per Second"
area        :none
hide_legend false
vtitle      'reqs / sec'
description "API Requests as seen by stats.<%= @app_name %>.application.allRequests"

# In contrast to the stats.timers 'count' metrics, the ones in 'stats'
# (no '.timer') are automatically rescaled to per second frequency by
# estatsd, so we can just use them directly (contrast to the
# requests_per_second_by_endpoint.graph)

field :rate,
      :data => 'stats.<%= @app_name %>.application.allRequests'

field :moving_average,
      :data => "movingAverage(stats.<%= @app_name %>.application.allRequests, 10)",
      :alias => "Moving Average (10 points)"

# Alternatively, we can use the stats_counts.* version of the metric,
# which is stored at a reduced resolution.  However, it is NOT scaled
# down by estatsd, so we have to do that with graphite's scaleToSeconds
# function.
#
# I'm opting for keeping the higher-resolution data.
#
# field :rate,
#       :data => 'stats_counts.<%= @app_name %>.application.allRequests',
#       :scale_to_seconds => 1
